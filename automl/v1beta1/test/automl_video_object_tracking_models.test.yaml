# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# DO NOT EDIT! This is a generated sample configuration.

---
type: SampleTestProto
schema_version: 1.2.0
test:
  suites:
  - name: AutoML Video Object Tracking – Model Tests
    setup:
    - env:
        name: GOOGLE_PROJECT_ID
        variable: project_id
    - code: |
        assert_that("AUTOML_MODEL_ID_x_VIDEO_OT" in os.environ,
        "Missing required environment variable: AUTOML_MODEL_ID_x_VIDEO_OT")
    - code: |
        assert_that("AUTOML_MODEL_NAME_x_VIDEO_OT" in os.environ,
        "Missing required environment variable: AUTOML_MODEL_NAME_x_VIDEO_OT")
    - env:
        variable: deployed_model_id
        name: AUTOML_MODEL_ID_x_VIDEO_OT
    - env:
        variable: deployed_model_display_name
        name: AUTOML_MODEL_NAME_x_VIDEO_OT
    cases:
    - name: Create Model (and then cancel creation)
      spec:
      - code: dataset_display_name = "a" + uuid().replace("-", "")[:30]
      - log:
        - 'Dataset display_name for test: {}'
        - dataset_display_name
      - code: model_display_name = "a" + uuid().replace("-", "")[:30]
      - log:
        - 'Model display_name for test: {}'
        - model_display_name
      - call:
          params:
            project:
              variable: project_id
            display_name:
              variable: dataset_display_name
          sample: automl_video_object_tracking_create_dataset
      - extract_match:
          pattern: datasets/([^\s]+)
          variable: generated_dataset_id
      - log:
        - 'Generated Dataset ID: {}'
        - generated_dataset_id
      - assert_contains:
        - literal: Created dataset
      - call:
          params:
            project:
              variable: project_id
            dataset_id:
              variable: generated_dataset_id
          sample: automl_video_object_tracking_import_data
      - assert_contains:
        - literal: Imported training data
      - call:
          params:
            project:
              variable: project_id
            dataset_id:
              variable: generated_dataset_id
            display_name:
              variable: model_display_name
          sample: automl_video_object_tracking_create_model
      - extract_match:
          pattern: operations/([^\s]+)
          variable: operation_id
      - log:
        - 'Long-Running Operation ID: {}'
        - operation_id
      - assert_contains:
        - literal: Started long-running operation
        - variable: operation_id
      - call:
          sample: automl_get_operation
          params:
            project:
              variable: project_id
            operation_id:
              variable: operation_id
      - assert_contains:
        - literal: 'Done: False'
        - variable: operation_id
      - call:
          sample: automl_list_operations
          params:
            project:
              variable: project_id
            filter:
              literal: done=false
      - assert_contains:
        - variable: operation_id
      - call:
          sample: automl_cancel_operation
          params:
            project:
              variable: project_id
            operation_id:
              variable: operation_id
      - assert_contains:
        - literal: Cancelled operation
        - variable: operation_id
      - call:
          sample: automl_wait_for_model_create_operation
          params:
            project:
              variable: project_id
            operation_id:
              variable: operation_id
      - assert_contains:
        - literal: Waiting for operation
        - literal: CANCELLED
    - name: List Models
      spec:
      - call:
          params:
            project:
              variable: project_id
          sample: automl_video_object_tracking_list_models
      - assert_contains:
        - literal: Model
        - variable: deployed_model_id
        - literal: Display name
        - variable: deployed_model_display_name
        - literal: Dataset ID
    - name: Get Model
      spec:
      - call:
          params:
            project:
              variable: project_id
            model_id:
              variable: deployed_model_id
          sample: automl_video_object_tracking_get_model
      - assert_contains:
        - literal: Model
        - variable: deployed_model_id
        - literal: Display name
        - variable: deployed_model_display_name
        - literal: Dataset ID
    - name: Delete Model
      spec:
      - call_may_fail:
          params:
            project:
              variable: project_id
            model_id:
              literal: VOT123456789123456
          sample: automl_video_object_tracking_delete_model
      - assert_contains:
        - literal: The model does not exist
    - name: List and Get Model Evaluations
      spec:
      - call:
          params:
            project:
              variable: project_id
            model_id:
              variable: deployed_model_id
          sample: automl_video_object_tracking_list_model_evaluations
      - extract_match:
          pattern: modelEvaluations/([^\s]+)
          variable: evaluation_id
      - assert_contains:
        - variable: deployed_model_id
        - literal: Display name
        - literal: Evaluated example count
      - log:
        - 'Model Evaluation to get: {}'
        - evaluation_id
      - call:
          params:
            project:
              variable: project_id
            model_id:
              variable: deployed_model_id
            evaluation_id:
              variable: evaluation_id
          sample: automl_video_object_tracking_get_model_evaluation
      - assert_contains:
        - variable: deployed_model_id
        - literal: Display name
        - literal: Evaluated example count
    - name: Batch Predict & View Results in GCS
      spec:
      - log:
        - TODO – UNIMPLEMENTED
      - code: print("TODO – UNIMPLEMENTED")
